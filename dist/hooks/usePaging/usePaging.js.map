{"version":3,"sources":["hooks/usePaging/usePaging.js","../src/hooks/usePaging/usePaging.ts"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","usePaging","react_1","require","Base_1","Paging_1","options","pageSize","paginationSize","startsWith","itemsCount","onMount","pagingState","onPagingUpdate","default","useState","page","functions","useMemo","nextPage","nextPagingPage","prevPage","prevPagingPage","updatePage","paging","nextState","prevState","deepEqual"],"mappings":"AAAA,aACA,IAAIA,gBAAoD,SAAUC,GAA9DD,OAAAA,GAAeC,EAAIC,WAAQD,EAAKD,CAAAA,QAAeC,CAAK,CAExD,EACAE,OAF6CC,eAAWH,QAAAA,aAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,EAGxDI,QAH6DC,UAAA,KAAA,ECF7D,MAAAC,QAAAP,gBAAAQ,QAAA,OAAA,CAAA,EACAC,OAAAD,QAAA,YAAA,EACAE,SAAAF,QAAA,yBAAA,EAGMF,UAAaK,IACf,KAAM,CAAEC,SAAAA,EAAUC,eAAAA,EAAgBC,WAAAA,EAAYC,WAAAA,EAAYC,QAAAA,CAAO,EAAKL,EAEhE,CAACM,EAAaC,GAAkBX,QAAAY,QAAMC,SAA+B,CACvEC,KAAMP,GAAc,CAP5B,CAQK,EAEKQ,EAAYf,QAAAY,QAAMI,QAAQ,KAC5B,GAAM,CAAEC,SAAAA,EAAUC,eAAAA,EAAgBC,SAAAA,EAAUC,eAAAA,EAAgBC,WAAAA,CAAU,GAAK,EAAAlB,SAAAmB,QAAO,CAC9EjB,SAAAA,EACAC,eAAAA,EACAC,WAAuB,OAAXG,GAAW,KAAA,IAAXA,EAAW,KAAA,EAAXA,EAAaI,KACzBN,WAAAA,EACAC,QAAAA,EACAE,eAAiBY,GACbZ,EAAgBa,IACX,EAAAtB,OAAAuB,WAAUD,EAAWD,CAAS,EAAqCC,EAAjC,CAAE,GAAGA,EAAW,GAAGD,CAAS,CAAc,CAbvF,CAeD,EAED,MAAO,CAAEN,SAAAA,EAAUC,eAAAA,EAAgBC,SAAAA,EAAUC,eAAAA,EAAgBC,WAAAA,CAAU,CAC3E,EAAG,CAAChB,EAAUC,EAA2B,OAAXI,GAAW,KAAA,IAAXA,EAAW,KAAA,EAAXA,EAAaI,KAAMN,EAAYC,EAAQ,EAErE,MAAO,CACH,GAAGC,EACH,GAAGK,CDFP,CCIJ,EAESjB,QAAAC,UAAAA","file":"usePaging.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.usePaging = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst Base_1 = require(\"../../Base\");\nconst Paging_1 = require(\"../../Base/Array/Paging\");\nconst usePaging = (options) => {\n    const { pageSize, paginationSize, startsWith, itemsCount, onMount } = options;\n    const [pagingState, onPagingUpdate] = react_1.default.useState({\n        page: startsWith || 1,\n    });\n    const functions = react_1.default.useMemo(() => {\n        const { nextPage, nextPagingPage, prevPage, prevPagingPage, updatePage } = (0, Paging_1.paging)({\n            pageSize,\n            paginationSize,\n            startsWith: pagingState?.page,\n            itemsCount,\n            onMount,\n            onPagingUpdate: (nextState) => onPagingUpdate((prevState) => !(0, Base_1.deepEqual)(prevState, nextState) ? { ...prevState, ...nextState } : prevState),\n        });\n        return { nextPage, nextPagingPage, prevPage, prevPagingPage, updatePage };\n    }, [pageSize, paginationSize, pagingState?.page, itemsCount, onMount]);\n    return {\n        ...pagingState,\n        ...functions,\n    };\n};\nexports.usePaging = usePaging;\n","import React from 'react'\nimport { deepEqual } from '../../Base'\nimport { paging, PagingState } from '../../Base/Array/Paging'\nimport { PagingProps, PagingResult } from './types'\n\nconst usePaging = (options: PagingProps): PagingResult => {\n    const { pageSize, paginationSize, startsWith, itemsCount, onMount } = options\n\n    const [pagingState, onPagingUpdate] = React.useState<Partial<PagingState>>({\n        page: startsWith || 1,\n    })\n\n    const functions = React.useMemo(() => {\n        const { nextPage, nextPagingPage, prevPage, prevPagingPage, updatePage } = paging({\n            pageSize,\n            paginationSize,\n            startsWith: pagingState?.page,\n            itemsCount,\n            onMount,\n            onPagingUpdate: (nextState) =>\n                onPagingUpdate((prevState) =>\n                    !deepEqual(prevState, nextState) ? { ...prevState, ...nextState } : prevState\n                ),\n        })\n\n        return { nextPage, nextPagingPage, prevPage, prevPagingPage, updatePage }\n    }, [pageSize, paginationSize, pagingState?.page, itemsCount, onMount])\n\n    return {\n        ...pagingState,\n        ...functions,\n    }\n}\n\nexport { usePaging }\n"]}