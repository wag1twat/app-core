{"version":3,"sources":["hooks/usePaging.js","../src/hooks/usePaging.ts"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","usePaging","react_1","require","Base_1","create_paging_1","options","state","setState","default","useState","functions","useMemo","paging","page","onPagingUpdate","nextState","prevState","deepEqual","itemsCount","pageSize","paginationSize","assign"],"mappings":"AAAA,aACA,IAAIA,gBAAoD,SAAUC,GAA9DD,OAAAA,GAAeC,EAAIC,WAAQD,EAAKD,CAAAA,QAAeC,CAAK,CAExD,EACAE,OAF6CC,eAAWH,QAAAA,aAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,EAGxDI,QAH6DC,UAAA,KAAA,ECF7D,MAAAC,QAAAP,gBAAAQ,QAAA,OAAA,CAAA,EACAC,OAAAD,QAAA,SAAA,EACAE,gBAAAF,QAAA,6BAAA,EAgBMF,UAAaK,IACf,KAAM,CAACC,EAAOC,GAAYN,QAAAO,QAAMC,SAAQ,EAExC,IAAMC,EAAYT,QAAAO,QAAMG,QACpB,KACI,EAAAP,gBAAAQ,QAAO,CACH,GAAGP,EACHQ,KAAW,OAALP,GAAK,KAAA,IAALA,EAAK,KAAA,EAALA,EAAOO,KACbC,eAAeC,GACXR,EAAUS,IACL,EAAAb,OAAAc,WAAUD,EAAWD,CAAS,EAAgBC,EAAZD,CAAqB,CAEhE,CANA,CAOH,EACL,CAACV,EAAQa,WAAYb,EAAQc,SAAUd,EAAQe,eAAe,EAGlE,OAAOvB,OAAOwB,OAAOf,GAAU,GAAiCI,CAAS,CAC7E,EAGSX,QAAAC,UAAAA","file":"usePaging.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.usePaging = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst Base_1 = require(\"../Base\");\nconst create_paging_1 = require(\"../Base/Array/create-paging\");\nconst usePaging = (options) => {\n    const [state, setState] = react_1.default.useState();\n    const functions = react_1.default.useMemo(() => (0, create_paging_1.paging)({\n        ...options,\n        page: state?.page,\n        onPagingUpdate(nextState) {\n            setState((prevState) => !(0, Base_1.deepEqual)(prevState, nextState) ? nextState : prevState);\n        },\n    }), [options.itemsCount, options.pageSize, options.paginationSize]);\n    return Object.assign(state || {}, functions);\n};\nexports.usePaging = usePaging;\n","import React from 'react'\nimport { deepEqual, Types } from '../Base'\nimport { paging } from '../Base/Array/create-paging'\n\ninterface PagingProps {\n    pageSize: number\n    paginationSize: number\n    itemsCount: number\n}\n\ninterface Pagign extends Types.Array.Paging.State {\n    updatePage: (page: number) => void\n    nextPage: () => void\n    prevPage: () => void\n    nextPaginationPage: () => void\n    prevPaginationPage: () => void\n}\n\nconst usePaging = (options: PagingProps): Pagign => {\n    const [state, setState] = React.useState<Types.Array.Paging.State>()\n\n    const functions = React.useMemo(\n        () =>\n            paging({\n                ...options,\n                page: state?.page,\n                onPagingUpdate(nextState) {\n                    setState((prevState) =>\n                        !deepEqual(prevState, nextState) ? nextState : prevState\n                    )\n                },\n            }),\n        [options.itemsCount, options.pageSize, options.paginationSize]\n    )\n\n    return Object.assign(state || ({} as Types.Array.Paging.State), functions)\n}\n\nexport type { PagingProps, Pagign }\nexport { usePaging }\n"]}