{"version":3,"sources":["hooks/usePaging.js","../src/hooks/usePaging.ts"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","usePaging","react_1","require","Base_1","create_paging_1","options","pageSize","paginationSize","itemsCount","onMount","pagingState","onPagingUpdate","default","useState","functions","useMemo","paging","startsWith","page","nextState","prevState","deepEqual"],"mappings":"AAAA,aACA,IAAIA,gBAAoD,SAAUC,GAA9DD,OAAAA,GAAeC,EAAIC,WAAQD,EAAKD,CAAAA,QAAeC,CAAK,CAExD,EACAE,OAF6CC,eAAWH,QAAAA,aAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,EAGxDI,QAH6DC,UAAA,KAAA,ECF7D,MAAAC,QAAAP,gBAAAQ,QAAA,OAAA,CAAA,EACAC,OAAAD,QAAA,SAAA,EACAE,gBAAAF,QAAA,6BAAA,EAKMF,UAAaK,IACf,KAAM,CAAEC,SAAAA,EAAUC,eAAAA,EAA4BC,WAAAA,EAAYC,QAAAA,CAAO,EAAKJ,EAEhE,CAACK,EAAaC,GAAkBV,QAAAW,QAAMC,SAAQ,EAE9CC,EAAYb,QAAAW,QAAMG,QACpB,KACI,EAAAX,gBAAAY,QAAO,CACHV,SAAAA,EACAC,eAAAA,EACAU,WAAuB,OAAXP,GAAW,KAAA,IAAXA,EAAW,KAAA,EAAXA,EAAaQ,KACzBV,WAAAA,EACAC,QAAAA,EACAE,eAAiBQ,GACbR,EAAgBS,IACX,EAAAjB,OAAAkB,WAAUD,EAAWD,CAAS,EAEzBC,EADA,CAAE,GAAGA,EAAW,GAAGD,CAAS,CACnB,CAhBgC,CAkB1D,EACL,CAACb,EAAUC,EAA2B,OAAXG,GAAW,KAAA,IAAXA,EAAW,KAAA,EAAXA,EAAaQ,KAAMV,EAAYC,EAAQ,EAGtE,MAAO,CACH,GAAGC,EACH,GAAGI,CAhBKP,CAkBhB,EAGSR,QAAAC,UAAAA","file":"usePaging.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.usePaging = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst Base_1 = require(\"../Base\");\nconst create_paging_1 = require(\"../Base/Array/create-paging\");\nconst usePaging = (options) => {\n    const { pageSize, paginationSize, startsWith, itemsCount, onMount } = options;\n    const [pagingState, onPagingUpdate] = react_1.default.useState();\n    const functions = react_1.default.useMemo(() => (0, create_paging_1.paging)({\n        pageSize,\n        paginationSize,\n        startsWith: pagingState?.page,\n        itemsCount,\n        onMount,\n        onPagingUpdate: (nextState) => onPagingUpdate((prevState) => !(0, Base_1.deepEqual)(prevState, nextState)\n            ? { ...prevState, ...nextState }\n            : prevState),\n    }), [pageSize, paginationSize, pagingState?.page, itemsCount, onMount]);\n    return {\n        ...pagingState,\n        ...functions,\n    };\n};\nexports.usePaging = usePaging;\n","import React from 'react'\nimport { deepEqual, Types } from '../Base'\nimport { paging } from '../Base/Array/create-paging'\n\ntype PagingProps = Omit<Types.Array.Paging.Options, 'onPagingUpdate'>\ntype Paging = Types.Array.Paging.PagingMethods & Partial<Types.Array.Paging.State>\n\nconst usePaging = (options: PagingProps): Paging => {\n    const { pageSize, paginationSize, startsWith, itemsCount, onMount } = options\n\n    const [pagingState, onPagingUpdate] = React.useState<Types.Array.Paging.State>()\n\n    const functions = React.useMemo(\n        () =>\n            paging({\n                pageSize,\n                paginationSize,\n                startsWith: pagingState?.page,\n                itemsCount,\n                onMount,\n                onPagingUpdate: (nextState) =>\n                    onPagingUpdate((prevState) =>\n                        !deepEqual(prevState, nextState)\n                            ? { ...prevState, ...nextState }\n                            : prevState\n                    ),\n            }),\n        [pageSize, paginationSize, pagingState?.page, itemsCount, onMount]\n    )\n\n    return {\n        ...pagingState,\n        ...functions,\n    }\n}\n\nexport type { PagingProps, Paging }\nexport { usePaging }\n"]}