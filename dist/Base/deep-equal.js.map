{"version":3,"sources":["Base/deep-equal.js","../src/Base/deep-equal.ts"],"names":["deepEqual","a","b","constructor","let","length","i","keys","Array","isArray","valueOf","Object","prototype","toString","hasOwnProperty","call","key","$$typeof","defineProperty","exports","value"],"mappings":"AAAA,aCCA,SAAgBA,UAAUC,EAAQC,GAC9B,GAAID,IAAMC,EACN,MAAO,CAAA,EAEX,GAAID,GAAKC,GAAiB,UAAZ,OAAOD,GAA6B,UAAZ,OAAOC,EAAe,CACxD,GAAID,EAAEE,cAAgBD,EAAEC,YAAa,MAAO,CAAA,EAE5CC,IAAIC,EAAQC,EAAGC,EACf,GAAIC,MAAMC,QAAQR,CAAC,EAAnB,CAEI,IADAI,EAASJ,EAAEI,SACGH,EAAEG,OAAQ,MAAO,CAAA,EAC/B,IAAKC,EAAID,EAAgB,GAARC,CAAC,IAAY,GAAI,CAACN,UAAUC,EAAEK,GAAIJ,EAAEI,EAAE,EAAG,MAAO,CAAA,CAIjEL,KAPJ,CAOA,GAAIA,EAAES,UAAYC,OAAOC,UAAUF,QAAS,OAAOT,EAAES,QAAO,IAAOR,EAAEQ,QAAO,EAC5E,GAAIT,EAAEY,WAAaF,OAAOC,UAAUC,SAAU,OAAOZ,EAAEY,SAAQ,IAAOX,EAAEW,SAAQ,EAIhF,GAFAN,EAAOI,OAAOJ,KAAKN,CAAC,GACpBI,EAASE,EAAKF,UACCM,OAAOJ,KAAKL,CAAC,EAAEG,OAAQ,MAAO,CAAA,EAE7C,IAAKC,EAAID,EAAgB,GAARC,CAAC,IACd,GAAI,CAACK,OAAOC,UAAUE,eAAeC,KAAKb,EAAGK,EAAKD,EAAE,EAAG,MAAO,CAAA,EAElE,IAAKA,EAAID,EAAgB,GAARC,CAAC,IAAY,CAC1BF,IAAIY,EAAMT,EAAKD,GAEf,IAAY,WAARU,GAAoBf,CAAAA,EAAEgB,WAItB,CAACjB,UAAUC,EAAEe,GAAMd,EAAEc,EAAI,EAAG,MAAO,CAAA,CDM3C,CCvBIf,CAoBJ,MAAO,CAAA,CDKX,CCHA,OAAOA,GAAMA,GAAKC,GAAMA,CAC5B,CDtCAS,OAAOO,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAA5DT,QAAOO,UAAAA,KAAAA,ECAPC,QAAAnB,UAAAA","file":"deep-equal.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepEqual = void 0;\n// TODO: compare variables types ???\nfunction deepEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n        if (a.constructor !== b.constructor)\n            return false;\n        let length, i, keys;\n        if (Array.isArray(a)) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!deepEqual(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (a.valueOf !== Object.prototype.valueOf)\n            return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString)\n            return a.toString() === b.toString();\n        keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            let key = keys[i];\n            if (key === '_owner' && a.$$typeof) {\n                continue;\n            }\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\nexports.deepEqual = deepEqual;\n","// TODO: compare variables types ???\nexport function deepEqual(a: any, b: any) {\n    if (a === b) {\n        return true\n    }\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n        if (a.constructor !== b.constructor) return false\n\n        let length, i, keys\n        if (Array.isArray(a)) {\n            length = a.length\n            if (length != b.length) return false\n            for (i = length; i-- !== 0; ) if (!deepEqual(a[i], b[i])) return false\n            return true\n        }\n\n        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf()\n        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString()\n\n        keys = Object.keys(a)\n        length = keys.length\n        if (length !== Object.keys(b).length) return false\n\n        for (i = length; i-- !== 0; )\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n        for (i = length; i-- !== 0; ) {\n            let key = keys[i]\n\n            if (key === '_owner' && a.$$typeof) {\n                continue\n            }\n\n            if (!deepEqual(a[key], b[key])) return false\n        }\n\n        return true\n    }\n    return a !== a && b !== b\n}\n"]}