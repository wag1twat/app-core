"use strict";var __importDefault=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const rules_1=require("../rules"),Types_1=require("../Types"),Guards_1=require("../../Guards"),get_1=__importDefault(require("./get")),toQueries=p=>(s=Types_1.Types.Object.defaultToQueriesOptions,r)=>{var t,{skipNull:e,skipUndefined:u}=s;let o=[];for(t in p){var i,a,c=(0,get_1.default)(p)(t);if((!0!==e||!Guards_1.Guards.isNull(c))&&(!0!==u||!Guards_1.Guards.isUndefined(c))){let e=t;Guards_1.Guards.isArrayConstructor(p)?([i,a]=Types_1.Types.Object.toQueriesAccsessors[s.arrayAccsessor||Types_1.Types.Object.defaultToQueriesOptions.arrayAccsessor],e=""+r+i+a):Guards_1.Guards.isObjectConstructor(p)&&([i,a]=Types_1.Types.Object.toQueriesAccsessors[s.objectAccsessor||Types_1.Types.Object.defaultToQueriesOptions.objectAccsessor],e=r?""+r+i+e+a:e),Guards_1.Guards.isObject(c)?o.push(toQueries(c)(s,e)):o.push(e+"="+encodeURIComponent(""+c))}}return o=o.filter(rules_1.nonEmptyString),(o=[].concat.apply([],o)).length?o.join("&"):""};exports.default=toQueries;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2UvT2JqZWN0L3RvLXF1ZXJpZXMuanMiLCIuLi9zcmMvQmFzZS9PYmplY3QvdG8tcXVlcmllcy50cyJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJydWxlc18xIiwicmVxdWlyZSIsIlR5cGVzXzEiLCJHdWFyZHNfMSIsImdldF8xIiwidG9RdWVyaWVzIiwib2JqIiwib3B0aW9ucyIsIlR5cGVzIiwiZGVmYXVsdFRvUXVlcmllc09wdGlvbnMiLCJwcmVmaXgiLCJrZXkiLCJza2lwTnVsbCIsInNraXBVbmRlZmluZWQiLCJsZXQiLCJyZXN1bHQiLCJwcmUiLCJwb3N0IiwidmFsdWUiLCJkZWZhdWx0IiwiR3VhcmRzIiwiaXNOdWxsIiwiaXNVbmRlZmluZWQiLCJhY2NzZXNzb3IiLCJpc0FycmF5Q29uc3RydWN0b3IiLCJ0b1F1ZXJpZXNBY2NzZXNzb3JzIiwiYXJyYXlBY2NzZXNzb3IiLCJpc09iamVjdENvbnN0cnVjdG9yIiwib2JqZWN0QWNjc2Vzc29yIiwiaXNPYmplY3QiLCJwdXNoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZmlsdGVyIiwibm9uRW1wdHlTdHJpbmciLCJjb25jYXQiLCJhcHBseSIsImxlbmd0aCIsImpvaW4iLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUNBLElBQUlBLGdCQUFvRCxTQUFVQyxHQUE5REQsT0FBQUEsR0FBZUMsRUFBSUMsV0FBUUQsRUFBS0QsQ0FBQUEsUUFBZUMsQ0FBSyxDQUV4RCxFQUNBRSxPQUY2Q0MsZUFBV0gsUUFBQUEsYUFBQUEsQ0FBQUEsTUFBQUEsQ0FBQUEsQ0FBQUEsQ0FBQUEsRUNGeEQsTUFBQUksUUFBQUMsUUFBQSxVQUFBLEVBQ0FDLFFBQUFELFFBQUEsVUFBQSxFQUNBRSxTQUFBRixRQUFBLGNBQUEsRUFDQUcsTUFBQVQsZ0JBQUFNLFFBQUEsT0FBQSxDQUFBLEVBRU1JLFVBQ2lCQyxHQUNuQixDQUNJQyxFQUFrREwsUUFBQU0sTUFBTVYsT0FBT1csd0JBQy9EQyxLQUVBLElBSVNDLEVBSkgsQ0FBRUMsU0FBQUEsRUFBVUMsY0FBQUEsQ0FBYSxFQUFLTixFQUVwQ08sSUFBSUMsRUFBbUIsR0FFdkIsSUFBU0osS0FBT0wsRUFBSyxDQUNqQixJQWtCV1UsRUFBS0MsRUFsQlZDLEdBQVEsRUFBQWQsTUFBQWUsU0FBUWIsQ0FBRyxFQUFFSyxDQUFHLEVBRTlCLElBQWlCLENBQUEsSUFBYkMsR0FBcUJULENBQUFBLFNBQUFpQixPQUFPQyxPQUFPSCxDQUFLLEtBRWYsQ0FBQSxJQUFsQkwsR0FBMEJWLENBQUFBLFNBQUFpQixPQUFPRSxZQUFZSixDQUFLLEdBQXRELENBSVBKLElBQUlTLEVBQW9CWixFQUVwQlIsU0FBQWlCLE9BQU9JLG1CQUFtQmxCLENBQUcsR0FDdkIsQ0FBQ1UsRUFBS0MsR0FDUmYsUUFBQU0sTUFBTVYsT0FBTzJCLG9CQUNUbEIsRUFBUW1CLGdCQUNKeEIsUUFBQU0sTUFBTVYsT0FBT1csd0JBQXdCaUIsZ0JBRWpESCxFQUFZLEdBQUdiLEVBQVNNLEVBQU1DLEdBQ3ZCZCxTQUFBaUIsT0FBT08sb0JBQW9CckIsQ0FBRyxJQUMvQixDQUFDVSxFQUFLQyxHQUNSZixRQUFBTSxNQUFNVixPQUFPMkIsb0JBQ1RsQixFQUFRcUIsaUJBQ0oxQixRQUFBTSxNQUFNVixPQUFPVyx3QkFBd0JtQixpQkFFakRMLEVBQVliLEVBQVMsR0FBR0EsRUFBU00sRUFBTU8sRUFBWU4sRUFBU00sR0FHNURwQixTQUFBaUIsT0FBT1MsU0FBU1gsQ0FBSyxFQUNyQkgsRUFBT2UsS0FBS3pCLFVBQVVhLENBQUssRUFBRVgsRUFBU2dCLENBQVMsQ0FBQyxFQUVoRFIsRUFBT2UsS0FBUVAsRUFBSCxJQUFnQlEsbUJBQW1CLEdBQUdiLENBQU8sQ0FBRyxDQWhDaEVILENEb0JKLENDb0JBLE9BSkFBLEVBQVNBLEVBQU9pQixPQUFPaEMsUUFBQWlDLGNBQWMsR0FFckNsQixFQUFVLEdBQWdCbUIsT0FBT0MsTUFBTSxHQUFnQnBCLENBQU0sR0FFL0NxQixPQUFTckIsRUFBT3NCLEtBQUssR0FBRyxFQUFJLEVBQzlDLEVBRUpDLFFBQUFuQixRQUFlZCIsImZpbGUiOiJCYXNlL09iamVjdC90by1xdWVyaWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBydWxlc18xID0gcmVxdWlyZShcIi4uL3J1bGVzXCIpO1xuY29uc3QgVHlwZXNfMSA9IHJlcXVpcmUoXCIuLi9UeXBlc1wiKTtcbmNvbnN0IEd1YXJkc18xID0gcmVxdWlyZShcIi4uLy4uL0d1YXJkc1wiKTtcbmNvbnN0IGdldF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2dldFwiKSk7XG5jb25zdCB0b1F1ZXJpZXMgPSAob2JqKSA9PiAob3B0aW9ucyA9IFR5cGVzXzEuVHlwZXMuT2JqZWN0LmRlZmF1bHRUb1F1ZXJpZXNPcHRpb25zLCBwcmVmaXgpID0+IHtcbiAgICBjb25zdCB7IHNraXBOdWxsLCBza2lwVW5kZWZpbmVkIH0gPSBvcHRpb25zO1xuICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKGxldCBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gKDAsIGdldF8xLmRlZmF1bHQpKG9iaikoa2V5KTtcbiAgICAgICAgaWYgKHNraXBOdWxsID09PSB0cnVlICYmIEd1YXJkc18xLkd1YXJkcy5pc051bGwodmFsdWUpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChza2lwVW5kZWZpbmVkID09PSB0cnVlICYmIEd1YXJkc18xLkd1YXJkcy5pc1VuZGVmaW5lZCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBhY2NzZXNzb3IgPSBrZXk7XG4gICAgICAgIGlmIChHdWFyZHNfMS5HdWFyZHMuaXNBcnJheUNvbnN0cnVjdG9yKG9iaikpIHtcbiAgICAgICAgICAgIGNvbnN0IFtwcmUsIHBvc3RdID0gVHlwZXNfMS5UeXBlcy5PYmplY3QudG9RdWVyaWVzQWNjc2Vzc29yc1tvcHRpb25zLmFycmF5QWNjc2Vzc29yIHx8XG4gICAgICAgICAgICAgICAgVHlwZXNfMS5UeXBlcy5PYmplY3QuZGVmYXVsdFRvUXVlcmllc09wdGlvbnMuYXJyYXlBY2NzZXNzb3JdO1xuICAgICAgICAgICAgYWNjc2Vzc29yID0gYCR7cHJlZml4fSR7cHJlfSR7cG9zdH1gO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEd1YXJkc18xLkd1YXJkcy5pc09iamVjdENvbnN0cnVjdG9yKG9iaikpIHtcbiAgICAgICAgICAgIGNvbnN0IFtwcmUsIHBvc3RdID0gVHlwZXNfMS5UeXBlcy5PYmplY3QudG9RdWVyaWVzQWNjc2Vzc29yc1tvcHRpb25zLm9iamVjdEFjY3Nlc3NvciB8fFxuICAgICAgICAgICAgICAgIFR5cGVzXzEuVHlwZXMuT2JqZWN0LmRlZmF1bHRUb1F1ZXJpZXNPcHRpb25zLm9iamVjdEFjY3Nlc3Nvcl07XG4gICAgICAgICAgICBhY2NzZXNzb3IgPSBwcmVmaXggPyBgJHtwcmVmaXh9JHtwcmV9JHthY2NzZXNzb3J9JHtwb3N0fWAgOiBhY2NzZXNzb3I7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEd1YXJkc18xLkd1YXJkcy5pc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRvUXVlcmllcyh2YWx1ZSkob3B0aW9ucywgYWNjc2Vzc29yKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChgJHthY2NzZXNzb3J9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KGAke3ZhbHVlfWApfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlc3VsdCA9IHJlc3VsdC5maWx0ZXIocnVsZXNfMS5ub25FbXB0eVN0cmluZyk7XG4gICAgcmVzdWx0ID0gW10uY29uY2F0LmFwcGx5KFtdLCByZXN1bHQpO1xuICAgIHJldHVybiByZXN1bHQubGVuZ3RoID8gcmVzdWx0LmpvaW4oJyYnKSA6ICcnO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRvUXVlcmllcztcbiIsImltcG9ydCB7IG5vbkVtcHR5U3RyaW5nIH0gZnJvbSAnLi4vcnVsZXMnXG5pbXBvcnQgeyBUeXBlcyB9IGZyb20gJy4uL1R5cGVzJ1xuaW1wb3J0IHsgR3VhcmRzIH0gZnJvbSAnLi4vLi4vR3VhcmRzJ1xuaW1wb3J0IGdldFByb3AgZnJvbSAnLi9nZXQnXG5cbmNvbnN0IHRvUXVlcmllcyA9XG4gICAgPE8gZXh0ZW5kcyBvYmplY3Q+KG9iajogTykgPT5cbiAgICAoXG4gICAgICAgIG9wdGlvbnM6IFBhcnRpYWw8VHlwZXMuT2JqZWN0LlRvUXVlcmllc09wdGlvbnM+ID0gVHlwZXMuT2JqZWN0LmRlZmF1bHRUb1F1ZXJpZXNPcHRpb25zLFxuICAgICAgICBwcmVmaXg/OiBzdHJpbmdcbiAgICApOiBzdHJpbmcgPT4ge1xuICAgICAgICBjb25zdCB7IHNraXBOdWxsLCBza2lwVW5kZWZpbmVkIH0gPSBvcHRpb25zXG5cbiAgICAgICAgbGV0IHJlc3VsdDogc3RyaW5nW10gPSBbXVxuXG4gICAgICAgIGZvciAobGV0IGtleSBpbiBvYmopIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZ2V0UHJvcChvYmopKGtleSlcblxuICAgICAgICAgICAgaWYgKHNraXBOdWxsID09PSB0cnVlICYmIEd1YXJkcy5pc051bGwodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2tpcFVuZGVmaW5lZCA9PT0gdHJ1ZSAmJiBHdWFyZHMuaXNVbmRlZmluZWQodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IGFjY3Nlc3Nvcjogc3RyaW5nID0ga2V5XG5cbiAgICAgICAgICAgIGlmIChHdWFyZHMuaXNBcnJheUNvbnN0cnVjdG9yKG9iaikpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbcHJlLCBwb3N0XSA9XG4gICAgICAgICAgICAgICAgICAgIFR5cGVzLk9iamVjdC50b1F1ZXJpZXNBY2NzZXNzb3JzW1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5hcnJheUFjY3Nlc3NvciB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFR5cGVzLk9iamVjdC5kZWZhdWx0VG9RdWVyaWVzT3B0aW9ucy5hcnJheUFjY3Nlc3NvclxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgYWNjc2Vzc29yID0gYCR7cHJlZml4fSR7cHJlfSR7cG9zdH1gXG4gICAgICAgICAgICB9IGVsc2UgaWYgKEd1YXJkcy5pc09iamVjdENvbnN0cnVjdG9yKG9iaikpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbcHJlLCBwb3N0XSA9XG4gICAgICAgICAgICAgICAgICAgIFR5cGVzLk9iamVjdC50b1F1ZXJpZXNBY2NzZXNzb3JzW1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5vYmplY3RBY2NzZXNzb3IgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUeXBlcy5PYmplY3QuZGVmYXVsdFRvUXVlcmllc09wdGlvbnMub2JqZWN0QWNjc2Vzc29yXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICBhY2NzZXNzb3IgPSBwcmVmaXggPyBgJHtwcmVmaXh9JHtwcmV9JHthY2NzZXNzb3J9JHtwb3N0fWAgOiBhY2NzZXNzb3JcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKEd1YXJkcy5pc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh0b1F1ZXJpZXModmFsdWUpKG9wdGlvbnMsIGFjY3Nlc3NvcikpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGAke2FjY3Nlc3Nvcn09JHtlbmNvZGVVUklDb21wb25lbnQoYCR7dmFsdWV9YCl9YClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5maWx0ZXIobm9uRW1wdHlTdHJpbmcpXG5cbiAgICAgICAgcmVzdWx0ID0gKFtdIGFzIHN0cmluZ1tdKS5jb25jYXQuYXBwbHkoW10gYXMgc3RyaW5nW10sIHJlc3VsdClcblxuICAgICAgICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA/IHJlc3VsdC5qb2luKCcmJykgOiAnJ1xuICAgIH1cblxuZXhwb3J0IGRlZmF1bHQgdG9RdWVyaWVzXG4iXX0=
