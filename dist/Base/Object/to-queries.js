"use strict";var __importDefault=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const rules_1=require("../rules"),Types_1=require("../Types"),Guards_1=require("../../Guards"),get_1=__importDefault(require("./get")),toQueries=p=>(s=Types_1.Types.Object.defaultToQueriesOptions,r)=>{var t,{skipNull:e,skipUndefined:u}=s;let o=[];for(t in p){var i,a,c=(0,get_1.default)(p)(t);if((!0!==e||!Guards_1.Guards.isNull(c))&&(!0!==u||!Guards_1.Guards.isUndefined(c))){let e=t;Guards_1.Guards.isArrayConstructor(p)?([i,a]=Types_1.Types.Object.toQueriesAccsessors[s.arrayAccsessor||Types_1.Types.Object.defaultToQueriesOptions.arrayAccsessor],e=""+r+i+a):Guards_1.Guards.isObjectConstructor(p)&&([i,a]=Types_1.Types.Object.toQueriesAccsessors[s.objectAccsessor||Types_1.Types.Object.defaultToQueriesOptions.objectAccsessor],e=r?""+r+i+e+a:e),Guards_1.Guards.isObject(c)?o.push(toQueries(c)(s,e)):o.push(e+"="+encodeURIComponent(""+c))}}return o=o.filter(rules_1.nonEmptyString),(o=[].concat.apply([],o)).length?o.join("&"):""};exports.default=toQueries;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2UvT2JqZWN0L3RvLXF1ZXJpZXMuanMiLCIuLi9zcmMvQmFzZS9PYmplY3QvdG8tcXVlcmllcy50cyJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJydWxlc18xIiwicmVxdWlyZSIsIlR5cGVzXzEiLCJHdWFyZHNfMSIsImdldF8xIiwidG9RdWVyaWVzIiwib2JqIiwib3B0aW9ucyIsIlR5cGVzIiwiZGVmYXVsdFRvUXVlcmllc09wdGlvbnMiLCJwcmVmaXgiLCJrZXkiLCJza2lwTnVsbCIsInNraXBVbmRlZmluZWQiLCJsZXQiLCJyZXN1bHQiLCJwcmUiLCJwb3N0IiwidmFsdWUiLCJkZWZhdWx0IiwiR3VhcmRzIiwiaXNOdWxsIiwiaXNVbmRlZmluZWQiLCJhY2NzZXNzb3IiLCJpc0FycmF5Q29uc3RydWN0b3IiLCJ0b1F1ZXJpZXNBY2NzZXNzb3JzIiwiYXJyYXlBY2NzZXNzb3IiLCJpc09iamVjdENvbnN0cnVjdG9yIiwib2JqZWN0QWNjc2Vzc29yIiwiaXNPYmplY3QiLCJwdXNoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZmlsdGVyIiwibm9uRW1wdHlTdHJpbmciLCJjb25jYXQiLCJhcHBseSIsImxlbmd0aCIsImpvaW4iLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUNBLElBQUlBLGdCQUFvRCxTQUFVQyxHQUE5REQsT0FBQUEsR0FBZUMsRUFBSUMsV0FBUUQsRUFBS0QsQ0FBQUEsUUFBZUMsQ0FBSyxDQUV4RCxFQUNBRSxPQUY2Q0MsZUFBV0gsUUFBQUEsYUFBQUEsQ0FBQUEsTUFBQUEsQ0FBQUEsQ0FBQUEsQ0FBQUEsRUNGeEQsTUFBQUksUUFBQUMsUUFBQSxVQUFBLEVBQ0FDLFFBQUFELFFBQUEsVUFBQSxFQUNBRSxTQUFBRixRQUFBLGNBQUEsRUFDQUcsTUFBQVQsZ0JBQUFNLFFBQUEsT0FBQSxDQUFBLEVBRU1JLFVBQ2lCQyxHQUNuQixDQUNJQyxFQUFrREwsUUFBQU0sTUFBTVYsT0FBT1csd0JBQy9EQyxLQUVBLElBSVNDLEVBSkgsQ0FBRUMsU0FBQUEsRUFBVUMsY0FBQUEsQ0FBYSxFQUFLTixFQUVwQ08sSUFBSUMsRUFBbUIsR0FFdkIsSUFBU0osS0FBT0wsRUFBSyxDQUNqQixJQWlCV1UsRUFBS0MsRUFqQlZDLEdBQVEsRUFBQWQsTUFBQWUsU0FBUWIsQ0FBRyxFQUFFSyxDQUFHLEVBRTlCLElBQWlCLENBQUEsSUFBYkMsR0FBcUJULENBQUFBLFNBQUFpQixPQUFPQyxPQUFPSCxDQUFLLEtBRWYsQ0FBQSxJQUFsQkwsR0FBMEJWLENBQUFBLFNBQUFpQixPQUFPRSxZQUFZSixDQUFLLEdBQXRELENBSVBKLElBQUlTLEVBQW9CWixFQUVwQlIsU0FBQWlCLE9BQU9JLG1CQUFtQmxCLENBQUcsR0FDdkIsQ0FBQ1UsRUFBS0MsR0FDUmYsUUFBQU0sTUFBTVYsT0FBTzJCLG9CQUNUbEIsRUFBUW1CLGdCQUFrQnhCLFFBQUFNLE1BQU1WLE9BQU9XLHdCQUF3QmlCLGdCQUV2RUgsRUFBWSxHQUFHYixFQUFTTSxFQUFNQyxHQUN2QmQsU0FBQWlCLE9BQU9PLG9CQUFvQnJCLENBQUcsSUFDL0IsQ0FBQ1UsRUFBS0MsR0FDUmYsUUFBQU0sTUFBTVYsT0FBTzJCLG9CQUNUbEIsRUFBUXFCLGlCQUFtQjFCLFFBQUFNLE1BQU1WLE9BQU9XLHdCQUF3Qm1CLGlCQUV4RUwsRUFBWWIsRUFBUyxHQUFHQSxFQUFTTSxFQUFNTyxFQUFZTixFQUFTTSxHQUc1RHBCLFNBQUFpQixPQUFPUyxTQUFTWCxDQUFLLEVBQ3JCSCxFQUFPZSxLQUFLekIsVUFBVWEsQ0FBSyxFQUFFWCxFQUFTZ0IsQ0FBUyxDQUFDLEVBRWhEUixFQUFPZSxLQUFRUCxFQUFILElBQWdCUSxtQkFBbUIsR0FBR2IsQ0FBTyxDQUFHLENBOUJoRUgsQ0EyQkEsQ0FXSixPQUpBQSxFQUFTQSxFQUFPaUIsT0FBT2hDLFFBQUFpQyxjQUFjLEdBRXJDbEIsRUFBVSxHQUFnQm1CLE9BQU9DLE1BQU0sR0FBZ0JwQixDQUFNLEdBRS9DcUIsT0FBU3JCLEVBQU9zQixLQUFLLEdBQUcsRUFBSSxFQUM5QyxFQUVKQyxRQUFBbkIsUUFBZWQiLCJmaWxlIjoiQmFzZS9PYmplY3QvdG8tcXVlcmllcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgcnVsZXNfMSA9IHJlcXVpcmUoXCIuLi9ydWxlc1wiKTtcbmNvbnN0IFR5cGVzXzEgPSByZXF1aXJlKFwiLi4vVHlwZXNcIik7XG5jb25zdCBHdWFyZHNfMSA9IHJlcXVpcmUoXCIuLi8uLi9HdWFyZHNcIik7XG5jb25zdCBnZXRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9nZXRcIikpO1xuY29uc3QgdG9RdWVyaWVzID0gKG9iaikgPT4gKG9wdGlvbnMgPSBUeXBlc18xLlR5cGVzLk9iamVjdC5kZWZhdWx0VG9RdWVyaWVzT3B0aW9ucywgcHJlZml4KSA9PiB7XG4gICAgY29uc3QgeyBza2lwTnVsbCwgc2tpcFVuZGVmaW5lZCB9ID0gb3B0aW9ucztcbiAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgZm9yIChsZXQga2V5IGluIG9iaikge1xuICAgICAgICBjb25zdCB2YWx1ZSA9ICgwLCBnZXRfMS5kZWZhdWx0KShvYmopKGtleSk7XG4gICAgICAgIGlmIChza2lwTnVsbCA9PT0gdHJ1ZSAmJiBHdWFyZHNfMS5HdWFyZHMuaXNOdWxsKHZhbHVlKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2tpcFVuZGVmaW5lZCA9PT0gdHJ1ZSAmJiBHdWFyZHNfMS5HdWFyZHMuaXNVbmRlZmluZWQodmFsdWUpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYWNjc2Vzc29yID0ga2V5O1xuICAgICAgICBpZiAoR3VhcmRzXzEuR3VhcmRzLmlzQXJyYXlDb25zdHJ1Y3RvcihvYmopKSB7XG4gICAgICAgICAgICBjb25zdCBbcHJlLCBwb3N0XSA9IFR5cGVzXzEuVHlwZXMuT2JqZWN0LnRvUXVlcmllc0FjY3Nlc3NvcnNbb3B0aW9ucy5hcnJheUFjY3Nlc3NvciB8fCBUeXBlc18xLlR5cGVzLk9iamVjdC5kZWZhdWx0VG9RdWVyaWVzT3B0aW9ucy5hcnJheUFjY3Nlc3Nvcl07XG4gICAgICAgICAgICBhY2NzZXNzb3IgPSBgJHtwcmVmaXh9JHtwcmV9JHtwb3N0fWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoR3VhcmRzXzEuR3VhcmRzLmlzT2JqZWN0Q29uc3RydWN0b3Iob2JqKSkge1xuICAgICAgICAgICAgY29uc3QgW3ByZSwgcG9zdF0gPSBUeXBlc18xLlR5cGVzLk9iamVjdC50b1F1ZXJpZXNBY2NzZXNzb3JzW29wdGlvbnMub2JqZWN0QWNjc2Vzc29yIHx8IFR5cGVzXzEuVHlwZXMuT2JqZWN0LmRlZmF1bHRUb1F1ZXJpZXNPcHRpb25zLm9iamVjdEFjY3Nlc3Nvcl07XG4gICAgICAgICAgICBhY2NzZXNzb3IgPSBwcmVmaXggPyBgJHtwcmVmaXh9JHtwcmV9JHthY2NzZXNzb3J9JHtwb3N0fWAgOiBhY2NzZXNzb3I7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEd1YXJkc18xLkd1YXJkcy5pc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRvUXVlcmllcyh2YWx1ZSkob3B0aW9ucywgYWNjc2Vzc29yKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChgJHthY2NzZXNzb3J9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KGAke3ZhbHVlfWApfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlc3VsdCA9IHJlc3VsdC5maWx0ZXIocnVsZXNfMS5ub25FbXB0eVN0cmluZyk7XG4gICAgcmVzdWx0ID0gW10uY29uY2F0LmFwcGx5KFtdLCByZXN1bHQpO1xuICAgIHJldHVybiByZXN1bHQubGVuZ3RoID8gcmVzdWx0LmpvaW4oJyYnKSA6ICcnO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRvUXVlcmllcztcbiIsImltcG9ydCB7IG5vbkVtcHR5U3RyaW5nIH0gZnJvbSAnLi4vcnVsZXMnXG5pbXBvcnQgeyBUeXBlcyB9IGZyb20gJy4uL1R5cGVzJ1xuaW1wb3J0IHsgR3VhcmRzIH0gZnJvbSAnLi4vLi4vR3VhcmRzJ1xuaW1wb3J0IGdldFByb3AgZnJvbSAnLi9nZXQnXG5cbmNvbnN0IHRvUXVlcmllcyA9XG4gICAgPE8gZXh0ZW5kcyBvYmplY3Q+KG9iajogTykgPT5cbiAgICAoXG4gICAgICAgIG9wdGlvbnM6IFBhcnRpYWw8VHlwZXMuT2JqZWN0LlRvUXVlcmllc09wdGlvbnM+ID0gVHlwZXMuT2JqZWN0LmRlZmF1bHRUb1F1ZXJpZXNPcHRpb25zLFxuICAgICAgICBwcmVmaXg/OiBzdHJpbmdcbiAgICApOiBzdHJpbmcgPT4ge1xuICAgICAgICBjb25zdCB7IHNraXBOdWxsLCBza2lwVW5kZWZpbmVkIH0gPSBvcHRpb25zXG5cbiAgICAgICAgbGV0IHJlc3VsdDogc3RyaW5nW10gPSBbXVxuXG4gICAgICAgIGZvciAobGV0IGtleSBpbiBvYmopIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZ2V0UHJvcChvYmopKGtleSlcblxuICAgICAgICAgICAgaWYgKHNraXBOdWxsID09PSB0cnVlICYmIEd1YXJkcy5pc051bGwodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2tpcFVuZGVmaW5lZCA9PT0gdHJ1ZSAmJiBHdWFyZHMuaXNVbmRlZmluZWQodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IGFjY3Nlc3Nvcjogc3RyaW5nID0ga2V5XG5cbiAgICAgICAgICAgIGlmIChHdWFyZHMuaXNBcnJheUNvbnN0cnVjdG9yKG9iaikpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbcHJlLCBwb3N0XSA9XG4gICAgICAgICAgICAgICAgICAgIFR5cGVzLk9iamVjdC50b1F1ZXJpZXNBY2NzZXNzb3JzW1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5hcnJheUFjY3Nlc3NvciB8fCBUeXBlcy5PYmplY3QuZGVmYXVsdFRvUXVlcmllc09wdGlvbnMuYXJyYXlBY2NzZXNzb3JcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIGFjY3Nlc3NvciA9IGAke3ByZWZpeH0ke3ByZX0ke3Bvc3R9YFxuICAgICAgICAgICAgfSBlbHNlIGlmIChHdWFyZHMuaXNPYmplY3RDb25zdHJ1Y3RvcihvYmopKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW3ByZSwgcG9zdF0gPVxuICAgICAgICAgICAgICAgICAgICBUeXBlcy5PYmplY3QudG9RdWVyaWVzQWNjc2Vzc29yc1tcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMub2JqZWN0QWNjc2Vzc29yIHx8IFR5cGVzLk9iamVjdC5kZWZhdWx0VG9RdWVyaWVzT3B0aW9ucy5vYmplY3RBY2NzZXNzb3JcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIGFjY3Nlc3NvciA9IHByZWZpeCA/IGAke3ByZWZpeH0ke3ByZX0ke2FjY3Nlc3Nvcn0ke3Bvc3R9YCA6IGFjY3Nlc3NvclxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoR3VhcmRzLmlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRvUXVlcmllcyh2YWx1ZSkob3B0aW9ucywgYWNjc2Vzc29yKSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goYCR7YWNjc2Vzc29yfT0ke2VuY29kZVVSSUNvbXBvbmVudChgJHt2YWx1ZX1gKX1gKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcihub25FbXB0eVN0cmluZylcblxuICAgICAgICByZXN1bHQgPSAoW10gYXMgc3RyaW5nW10pLmNvbmNhdC5hcHBseShbXSBhcyBzdHJpbmdbXSwgcmVzdWx0KVxuXG4gICAgICAgIHJldHVybiByZXN1bHQubGVuZ3RoID8gcmVzdWx0LmpvaW4oJyYnKSA6ICcnXG4gICAgfVxuXG5leHBvcnQgZGVmYXVsdCB0b1F1ZXJpZXNcbiJdfQ==
