"use strict";var __importDefault=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const rules_1=require("../rules"),Types_1=require("../Types"),Guards_1=require("../../Guards"),get_1=__importDefault(require("./get")),toQueries=p=>(s=Types_1.Types.Object.defaultToQueriesOptions,r)=>{var t,{skipNull:e,skipUndefined:u}=s;let o=[];for(t in p){var i,a,c=(0,get_1.default)(p)(t);if((!0!==e||!Guards_1.Guards.isNull(c))&&(!0!==u||!Guards_1.Guards.isUndefined(c))){let e=t;Guards_1.Guards.isArrayConstructor(p)?([i,a]=Types_1.Types.Object.toQueriesAccsessors[s.arrayAccsessor||Types_1.Types.Object.defaultToQueriesOptions.arrayAccsessor],e=""+r+i+a):Guards_1.Guards.isObjectConstructor(p)&&([i,a]=Types_1.Types.Object.toQueriesAccsessors[s.objectAccsessor||Types_1.Types.Object.defaultToQueriesOptions.objectAccsessor],e=r?""+r+i+e+a:e),Guards_1.Guards.isObject(c)?o.push(toQueries(c)(s,e)):o.push(e+"="+encodeURIComponent(""+c))}}return o=o.filter(rules_1.nonEmptyString),(o=[].concat.apply([],o)).length?o.join("&"):""};exports.default=toQueries;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2UvT2JqZWN0L3RvLXF1ZXJpZXMuanMiLCIuLi9zcmMvQmFzZS9PYmplY3QvdG8tcXVlcmllcy50cyJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJydWxlc18xIiwicmVxdWlyZSIsIlR5cGVzXzEiLCJHdWFyZHNfMSIsImdldF8xIiwidG9RdWVyaWVzIiwib2JqIiwib3B0aW9ucyIsIlR5cGVzIiwiZGVmYXVsdFRvUXVlcmllc09wdGlvbnMiLCJwcmVmaXgiLCJrZXkiLCJza2lwTnVsbCIsInNraXBVbmRlZmluZWQiLCJsZXQiLCJyZXN1bHQiLCJwcmUiLCJwb3N0IiwidmFsdWUiLCJkZWZhdWx0IiwiR3VhcmRzIiwiaXNOdWxsIiwiaXNVbmRlZmluZWQiLCJhY2NzZXNzb3IiLCJpc0FycmF5Q29uc3RydWN0b3IiLCJ0b1F1ZXJpZXNBY2NzZXNzb3JzIiwiYXJyYXlBY2NzZXNzb3IiLCJpc09iamVjdENvbnN0cnVjdG9yIiwib2JqZWN0QWNjc2Vzc29yIiwiaXNPYmplY3QiLCJwdXNoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZmlsdGVyIiwibm9uRW1wdHlTdHJpbmciLCJjb25jYXQiLCJhcHBseSIsImxlbmd0aCIsImpvaW4iLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUNBLElBQUlBLGdCQUFvRCxTQUFVQyxHQUE5REQsT0FBQUEsR0FBZUMsRUFBSUMsV0FBUUQsRUFBS0QsQ0FBQUEsUUFBZUMsQ0FBSyxDQUV4RCxFQUNBRSxPQUY2Q0MsZUFBV0gsUUFBQUEsYUFBQUEsQ0FBQUEsTUFBQUEsQ0FBQUEsQ0FBQUEsQ0FBQUEsRUNGeEQsTUFBQUksUUFBQUMsUUFBQSxVQUFBLEVBQ0FDLFFBQUFELFFBQUEsVUFBQSxFQUNBRSxTQUFBRixRQUFBLGNBQUEsRUFDQUcsTUFBQVQsZ0JBQUFNLFFBQUEsT0FBQSxDQUFBLEVBRU1JLFVBQ2lCQyxHQUNuQixDQUNJQyxFQUFrREwsUUFBQU0sTUFBTVYsT0FDbkRXLHdCQUNMQyxLQUVBLElBSVNDLEVBSkgsQ0FBRUMsU0FBQUEsRUFBVUMsY0FBQUEsQ0FBYSxFQUFLTixFQUVwQ08sSUFBSUMsRUFBbUIsR0FFdkIsSUFBU0osS0FBT0wsRUFBSyxDQUNqQixJQWtCV1UsRUFBS0MsRUFsQlZDLEdBQVEsRUFBQWQsTUFBQWUsU0FBUWIsQ0FBRyxFQUFFSyxDQUFHLEVBRTlCLElBQWlCLENBQUEsSUFBYkMsR0FBcUJULENBQUFBLFNBQUFpQixPQUFPQyxPQUFPSCxDQUFLLEtBRWYsQ0FBQSxJQUFsQkwsR0FBMEJWLENBQUFBLFNBQUFpQixPQUFPRSxZQUFZSixDQUFLLEdBQXRELENBSVBKLElBQUlTLEVBQW9CWixFQUVwQlIsU0FBQWlCLE9BQU9JLG1CQUFtQmxCLENBQUcsR0FDdkIsQ0FBQ1UsRUFBS0MsR0FDUmYsUUFBQU0sTUFBTVYsT0FBTzJCLG9CQUNUbEIsRUFBUW1CLGdCQUNKeEIsUUFBQU0sTUFBTVYsT0FBT1csd0JBQXdCaUIsZ0JBRWpESCxFQUFZLEdBQUdiLEVBQVNNLEVBQU1DLEdBQ3ZCZCxTQUFBaUIsT0FBT08sb0JBQW9CckIsQ0FBRyxJQUMvQixDQUFDVSxFQUFLQyxHQUNSZixRQUFBTSxNQUFNVixPQUFPMkIsb0JBQ1RsQixFQUFRcUIsaUJBQ0oxQixRQUFBTSxNQUFNVixPQUFPVyx3QkFBd0JtQixpQkFFakRMLEVBQVliLEVBQ04sR0FBR0EsRUFBU00sRUFBTU8sRUFBWU4sRUFDOUJNLEdBR05wQixTQUFBaUIsT0FBT1MsU0FBU1gsQ0FBSyxFQUNyQkgsRUFBT2UsS0FBS3pCLFVBQVVhLENBQUssRUFBRVgsRUFBU2dCLENBQVMsQ0FBQyxFQUVoRFIsRUFBT2UsS0FBUVAsRUFBSCxJQUFnQlEsbUJBQW1CLEdBQUdiLENBQU8sQ0FBRyxDQWhDL0QsQ0R3QlQsQ0NnQkksT0FKQUgsRUFBU0EsRUFBT2lCLE9BQU9oQyxRQUFBaUMsY0FBYyxHQUVyQ2xCLEVBQVUsR0FBZ0JtQixPQUFPQyxNQUFNLEdBQWdCcEIsQ0FBTSxHQUUvQ3FCLE9BQVNyQixFQUFPc0IsS0FBSyxHQUFHLEVBQUksRUFDOUMsRUFFSkMsUUFBQW5CLFFBQWVkIiwiZmlsZSI6IkJhc2UvT2JqZWN0L3RvLXF1ZXJpZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHJ1bGVzXzEgPSByZXF1aXJlKFwiLi4vcnVsZXNcIik7XG5jb25zdCBUeXBlc18xID0gcmVxdWlyZShcIi4uL1R5cGVzXCIpO1xuY29uc3QgR3VhcmRzXzEgPSByZXF1aXJlKFwiLi4vLi4vR3VhcmRzXCIpO1xuY29uc3QgZ2V0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vZ2V0XCIpKTtcbmNvbnN0IHRvUXVlcmllcyA9IChvYmopID0+IChvcHRpb25zID0gVHlwZXNfMS5UeXBlcy5PYmplY3RcbiAgICAuZGVmYXVsdFRvUXVlcmllc09wdGlvbnMsIHByZWZpeCkgPT4ge1xuICAgIGNvbnN0IHsgc2tpcE51bGwsIHNraXBVbmRlZmluZWQgfSA9IG9wdGlvbnM7XG4gICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgIGZvciAobGV0IGtleSBpbiBvYmopIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSAoMCwgZ2V0XzEuZGVmYXVsdCkob2JqKShrZXkpO1xuICAgICAgICBpZiAoc2tpcE51bGwgPT09IHRydWUgJiYgR3VhcmRzXzEuR3VhcmRzLmlzTnVsbCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNraXBVbmRlZmluZWQgPT09IHRydWUgJiYgR3VhcmRzXzEuR3VhcmRzLmlzVW5kZWZpbmVkKHZhbHVlKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGFjY3Nlc3NvciA9IGtleTtcbiAgICAgICAgaWYgKEd1YXJkc18xLkd1YXJkcy5pc0FycmF5Q29uc3RydWN0b3Iob2JqKSkge1xuICAgICAgICAgICAgY29uc3QgW3ByZSwgcG9zdF0gPSBUeXBlc18xLlR5cGVzLk9iamVjdC50b1F1ZXJpZXNBY2NzZXNzb3JzW29wdGlvbnMuYXJyYXlBY2NzZXNzb3IgfHxcbiAgICAgICAgICAgICAgICBUeXBlc18xLlR5cGVzLk9iamVjdC5kZWZhdWx0VG9RdWVyaWVzT3B0aW9ucy5hcnJheUFjY3Nlc3Nvcl07XG4gICAgICAgICAgICBhY2NzZXNzb3IgPSBgJHtwcmVmaXh9JHtwcmV9JHtwb3N0fWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoR3VhcmRzXzEuR3VhcmRzLmlzT2JqZWN0Q29uc3RydWN0b3Iob2JqKSkge1xuICAgICAgICAgICAgY29uc3QgW3ByZSwgcG9zdF0gPSBUeXBlc18xLlR5cGVzLk9iamVjdC50b1F1ZXJpZXNBY2NzZXNzb3JzW29wdGlvbnMub2JqZWN0QWNjc2Vzc29yIHx8XG4gICAgICAgICAgICAgICAgVHlwZXNfMS5UeXBlcy5PYmplY3QuZGVmYXVsdFRvUXVlcmllc09wdGlvbnMub2JqZWN0QWNjc2Vzc29yXTtcbiAgICAgICAgICAgIGFjY3Nlc3NvciA9IHByZWZpeFxuICAgICAgICAgICAgICAgID8gYCR7cHJlZml4fSR7cHJlfSR7YWNjc2Vzc29yfSR7cG9zdH1gXG4gICAgICAgICAgICAgICAgOiBhY2NzZXNzb3I7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEd1YXJkc18xLkd1YXJkcy5pc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRvUXVlcmllcyh2YWx1ZSkob3B0aW9ucywgYWNjc2Vzc29yKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChgJHthY2NzZXNzb3J9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KGAke3ZhbHVlfWApfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlc3VsdCA9IHJlc3VsdC5maWx0ZXIocnVsZXNfMS5ub25FbXB0eVN0cmluZyk7XG4gICAgcmVzdWx0ID0gW10uY29uY2F0LmFwcGx5KFtdLCByZXN1bHQpO1xuICAgIHJldHVybiByZXN1bHQubGVuZ3RoID8gcmVzdWx0LmpvaW4oJyYnKSA6ICcnO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRvUXVlcmllcztcbiIsImltcG9ydCB7IG5vbkVtcHR5U3RyaW5nIH0gZnJvbSAnLi4vcnVsZXMnXG5pbXBvcnQgeyBUeXBlcyB9IGZyb20gJy4uL1R5cGVzJ1xuaW1wb3J0IHsgR3VhcmRzIH0gZnJvbSAnLi4vLi4vR3VhcmRzJ1xuaW1wb3J0IGdldFByb3AgZnJvbSAnLi9nZXQnXG5cbmNvbnN0IHRvUXVlcmllcyA9XG4gICAgPE8gZXh0ZW5kcyBvYmplY3Q+KG9iajogTykgPT5cbiAgICAoXG4gICAgICAgIG9wdGlvbnM6IFBhcnRpYWw8VHlwZXMuT2JqZWN0LlRvUXVlcmllc09wdGlvbnM+ID0gVHlwZXMuT2JqZWN0XG4gICAgICAgICAgICAuZGVmYXVsdFRvUXVlcmllc09wdGlvbnMsXG4gICAgICAgIHByZWZpeD86IHN0cmluZ1xuICAgICk6IHN0cmluZyA9PiB7XG4gICAgICAgIGNvbnN0IHsgc2tpcE51bGwsIHNraXBVbmRlZmluZWQgfSA9IG9wdGlvbnNcblxuICAgICAgICBsZXQgcmVzdWx0OiBzdHJpbmdbXSA9IFtdXG5cbiAgICAgICAgZm9yIChsZXQga2V5IGluIG9iaikge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBnZXRQcm9wKG9iaikoa2V5KVxuXG4gICAgICAgICAgICBpZiAoc2tpcE51bGwgPT09IHRydWUgJiYgR3VhcmRzLmlzTnVsbCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgfSBlbHNlIGlmIChza2lwVW5kZWZpbmVkID09PSB0cnVlICYmIEd1YXJkcy5pc1VuZGVmaW5lZCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgYWNjc2Vzc29yOiBzdHJpbmcgPSBrZXlcblxuICAgICAgICAgICAgaWYgKEd1YXJkcy5pc0FycmF5Q29uc3RydWN0b3Iob2JqKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtwcmUsIHBvc3RdID1cbiAgICAgICAgICAgICAgICAgICAgVHlwZXMuT2JqZWN0LnRvUXVlcmllc0FjY3Nlc3NvcnNbXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmFycmF5QWNjc2Vzc29yIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVHlwZXMuT2JqZWN0LmRlZmF1bHRUb1F1ZXJpZXNPcHRpb25zLmFycmF5QWNjc2Vzc29yXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICBhY2NzZXNzb3IgPSBgJHtwcmVmaXh9JHtwcmV9JHtwb3N0fWBcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoR3VhcmRzLmlzT2JqZWN0Q29uc3RydWN0b3Iob2JqKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtwcmUsIHBvc3RdID1cbiAgICAgICAgICAgICAgICAgICAgVHlwZXMuT2JqZWN0LnRvUXVlcmllc0FjY3Nlc3NvcnNbXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm9iamVjdEFjY3Nlc3NvciB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFR5cGVzLk9iamVjdC5kZWZhdWx0VG9RdWVyaWVzT3B0aW9ucy5vYmplY3RBY2NzZXNzb3JcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIGFjY3Nlc3NvciA9IHByZWZpeFxuICAgICAgICAgICAgICAgICAgICA/IGAke3ByZWZpeH0ke3ByZX0ke2FjY3Nlc3Nvcn0ke3Bvc3R9YFxuICAgICAgICAgICAgICAgICAgICA6IGFjY3Nlc3NvclxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoR3VhcmRzLmlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRvUXVlcmllcyh2YWx1ZSkob3B0aW9ucywgYWNjc2Vzc29yKSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goYCR7YWNjc2Vzc29yfT0ke2VuY29kZVVSSUNvbXBvbmVudChgJHt2YWx1ZX1gKX1gKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcihub25FbXB0eVN0cmluZylcblxuICAgICAgICByZXN1bHQgPSAoW10gYXMgc3RyaW5nW10pLmNvbmNhdC5hcHBseShbXSBhcyBzdHJpbmdbXSwgcmVzdWx0KVxuXG4gICAgICAgIHJldHVybiByZXN1bHQubGVuZ3RoID8gcmVzdWx0LmpvaW4oJyYnKSA6ICcnXG4gICAgfVxuXG5leHBvcnQgZGVmYXVsdCB0b1F1ZXJpZXNcbiJdfQ==
