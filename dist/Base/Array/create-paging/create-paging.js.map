{"version":3,"sources":["Base/Array/create-paging/create-paging.js","../src/Base/Array/create-paging/create-paging.ts"],"names":["Object","defineProperty","exports","value","Guards_1","require","paging_1","createPaging","collection","options","page","pageSize","paginationSize","onMount","onPagingUpdate","onCollectionUpdate","paging","itemsCount","length","state","Guards","isFunc","slice"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAA5DH,QAAOC,aAAeC,KAAAA,ECDtB,MAAAE,SAAAC,QAAA,iBAAA,EAEAC,SAAAD,QAAA,UAAA,EAEaE,aAAiCC,GAIlCC,IACJ,KAAM,CAAEC,KAAAA,EAAMC,SAAAA,EAAUC,eAAAA,EAAgBC,QAAAA,EAASC,eAAAA,EAAgBC,mBAAAA,CAAkB,EAC/EN,EASJ,OAAO,EAAAH,SAAAU,QAAO,CACVC,WAAYT,EAAWU,OACvBR,KAAAA,EACAC,SAAAA,EACAC,eAAAA,EACAC,QAAAA,EACAC,eAdcK,IACVf,SAAAgB,OAAOC,OAAOP,CAAc,IAC5BA,EAAeK,CAAK,EACpBJ,EACIP,EAAWc,OAAOH,EAAMT,KAAO,GAAKC,EAAUQ,EAAMT,KAAOC,CAAQ,CAAM,EAGrF,CAJQI,CAYP,CACL,EAvBSb,QAAAK,aAAYA","file":"create-paging.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPaging = void 0;\nconst Guards_1 = require(\"../../../Guards\");\nconst paging_1 = require(\"./paging\");\nconst createPaging = (collection) => {\n    // TODO: cache values\n    // let cache: Record<string, T> = {}\n    return (options) => {\n        const { page, pageSize, paginationSize, onMount, onPagingUpdate, onCollectionUpdate } = options;\n        const onUpdate = (state) => {\n            if (Guards_1.Guards.isFunc(onPagingUpdate)) {\n                onPagingUpdate(state);\n                onCollectionUpdate(collection.slice((state.page - 1) * pageSize, state.page * pageSize));\n            }\n        };\n        return (0, paging_1.paging)({\n            itemsCount: collection.length,\n            page,\n            pageSize,\n            paginationSize,\n            onMount,\n            onPagingUpdate: onUpdate,\n        });\n    };\n};\nexports.createPaging = createPaging;\n","import { Guards } from '../../../Guards'\nimport { Types } from '../../Types'\nimport { paging } from './paging'\n\nexport const createPaging = <T extends any[]>(collection: T) => {\n    // TODO: cache values\n    // let cache: Record<string, T> = {}\n\n    return (options: Types.Array.CreatePaging.Options<T>) => {\n        const { page, pageSize, paginationSize, onMount, onPagingUpdate, onCollectionUpdate } =\n            options\n        const onUpdate = (state: Types.Array.Paging.State) => {\n            if (Guards.isFunc(onPagingUpdate)) {\n                onPagingUpdate(state)\n                onCollectionUpdate(\n                    collection.slice((state.page - 1) * pageSize, state.page * pageSize) as T\n                )\n            }\n        }\n        return paging({\n            itemsCount: collection.length,\n            page,\n            pageSize,\n            paginationSize,\n            onMount,\n            onPagingUpdate: onUpdate,\n        })\n    }\n}\n"]}