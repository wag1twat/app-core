{"version":3,"sources":["Base/Array/create-paging/create-paging.js","../src/Base/Array/create-paging/create-paging.ts"],"names":["Object","defineProperty","exports","value","paging_1","require","createPaging","collection","let","cache","options","pageSize","paginationSize","onUpdate","paging","itemsCount","length","onPagingUpdate","state","page","slice"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAA5DH,QAAOC,aAAeC,KAAAA,ECAtB,MAAAE,SAAAC,QAAA,UAAA,EAEaC,aAAiCC,IAC1CC,IAAIC,EAA2B,GAE/B,OAAQC,IACJ,KAAM,CAAEC,SAAAA,EAAUC,eAAAA,EAAgBC,SAAAA,CAAQ,EAAKH,EAC/C,OAAO,EAAAN,SAAAU,QAAO,CACVC,WAAYR,EAAWS,OACvBL,SAAAA,EACAC,eAAAA,EACAK,eAAeC,GACXL,EAAS,CACL,GAAGK,EACHX,WAAYE,EAAMS,EAAMC,OAEjBZ,EAAWa,OACPF,EAAMC,KAAO,GAAKR,EACnBO,EAAMC,KAAOR,CAAQ,CARvCC,CAUK,CACL,CATIC,CAUP,CACL,CACJ,EAtBaX,QAAAI,aAAYA","file":"create-paging.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPaging = void 0;\nconst paging_1 = require(\"./paging\");\nconst createPaging = (collection) => {\n    let cache = {};\n    return (options) => {\n        const { pageSize, paginationSize, onUpdate } = options;\n        return (0, paging_1.paging)({\n            itemsCount: collection.length,\n            pageSize,\n            paginationSize,\n            onPagingUpdate(state) {\n                onUpdate({\n                    ...state,\n                    collection: cache[state.page]\n                        ? cache[state.page]\n                        : collection.slice((state.page - 1) * pageSize, state.page * pageSize),\n                });\n            },\n        });\n    };\n};\nexports.createPaging = createPaging;\n","import { Types } from '../../Types'\nimport { paging } from './paging'\n\nexport const createPaging = <T extends any[]>(collection: T) => {\n    let cache: Record<string, T> = {}\n\n    return (options: Types.Array.PagingCollection.Options<T>) => {\n        const { pageSize, paginationSize, onUpdate } = options\n        return paging({\n            itemsCount: collection.length,\n            pageSize,\n            paginationSize,\n            onPagingUpdate(state) {\n                onUpdate({\n                    ...state,\n                    collection: cache[state.page]\n                        ? cache[state.page]\n                        : (collection.slice(\n                              (state.page - 1) * pageSize,\n                              state.page * pageSize\n                          ) as T),\n                })\n            },\n        })\n    }\n}\n"]}