{"version":3,"sources":["Base/String/String.js","../src/Base/String/String.ts"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","$String","has_query_params_1","require","join_queries_1","replace_all_1","split_1","string","split","separator","limit","default","replaceAll","p","hasQueryParams","joinQueryString","queries"],"mappings":"AAAA,aACA,IAAIA,gBAAoD,SAAUC,GAA9DD,OAAAA,GAAeC,EAAIC,WAAQD,EAAKD,CAAAA,QAAeC,CAAK,CAExD,EACAE,OAF6CC,eAAWH,QAAAA,aAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,EAGxDI,QAH6DC,QAAA,KAAA,ECF7D,MAAAC,mBAAAP,gBAAAQ,QAAA,oBAAA,CAAA,EACAC,eAAAT,gBAAAQ,QAAA,gBAAA,CAAA,EACAE,cAAAV,gBAAAQ,QAAA,eAAA,CAAA,EACAG,QAAAX,gBAAAQ,QAAA,SAAA,CAAA,EAEA,SAAgBF,QAA0BM,GACtC,MAAO,CACHC,MAAOA,CACHC,EACAC,KACC,EAAAJ,QAAAK,SAAOJ,CAAM,EAAEE,EAAWC,CAAK,EACpCE,WAAYA,CACRH,EACAI,KACC,EAAAR,cAAAM,SAAYJ,CAAM,EAAEE,EAAWI,CAAC,EACrCC,eAAgBA,KAAM,EAAAZ,mBAAAS,SAAgBJ,CAAM,EAC5CQ,gBAAoCC,IAAe,EAAAZ,eAAAO,SAAaJ,CAAM,EAAES,CAAO,CAVnF,CAYJ,CAbAhB,QAAAC,QAAAA","file":"String.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$String = void 0;\nconst has_query_params_1 = __importDefault(require(\"./has-query-params\"));\nconst join_queries_1 = __importDefault(require(\"./join-queries\"));\nconst replace_all_1 = __importDefault(require(\"./replace-all\"));\nconst split_1 = __importDefault(require(\"./split\"));\nfunction $String(string) {\n    return {\n        split: (separator, limit) => (0, split_1.default)(string)(separator, limit),\n        replaceAll: (separator, p) => (0, replace_all_1.default)(string)(separator, p),\n        hasQueryParams: () => (0, has_query_params_1.default)(string),\n        joinQueryString: (queries) => (0, join_queries_1.default)(string)(queries),\n    };\n}\nexports.$String = $String;\n","import _hasQueryParams from './has-query-params'\nimport _joinQueries from './join-queries'\nimport _replaceAll from './replace-all'\nimport _split from './split'\n\nexport function $String<S extends string>(string: S) {\n    return {\n        split: <Separator extends string | RegExp>(\n            separator: Separator,\n            limit?: number | undefined\n        ) => _split(string)(separator, limit),\n        replaceAll: <Separator extends string, P extends { [x: string]: any }>(\n            separator: Separator,\n            p: P\n        ) => _replaceAll(string)(separator, p),\n        hasQueryParams: () => _hasQueryParams(string),\n        joinQueryString: <Q extends string>(queries: Q) => _joinQueries(string)(queries),\n    }\n}\n"]}