{"version":3,"sources":["Base/String/String.js","../src/Base/String/String.ts"],"names":["Object","defineProperty","exports","value","has_query_params_1","require","join_queries_1","replace_all_1","split_1","$String","string","split","separator","limit","replaceAll","p","hasQueryParams","joinQueries","queries"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAA5DH,QAAOC,QAAAA,KAAAA,ECDP,MAAAG,mBAAAC,QAAA,oBAAA,EACAC,eAAAD,QAAA,gBAAA,EACAE,cAAAF,QAAA,eAAA,EACAG,QAAAH,QAAA,SAAA,EAEA,SAAgBI,QAA0BC,GACtC,MAAO,CACHC,MAAOA,CACHC,EACAC,KACC,EAAAL,QAAAG,OAAOD,CAAM,EAAEE,EAAWC,CAAK,EACpCC,WAAYA,CAA6CF,EAAsBG,KAC3E,EAAAR,cAAAO,YAAYJ,CAAM,EAAEE,EAAWG,CAAC,EACpCC,eAAgBA,KAAM,EAAAZ,mBAAAY,gBAAgBN,CAAM,EAC5CO,YAAgCC,IAAe,EAAAZ,eAAAW,aAAaP,CAAM,EAAEQ,CAAO,CAH3EJ,CAKR,CAXAZ,QAAAO,QAAAA","file":"String.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$String = void 0;\nconst has_query_params_1 = require(\"./has-query-params\");\nconst join_queries_1 = require(\"./join-queries\");\nconst replace_all_1 = require(\"./replace-all\");\nconst split_1 = require(\"./split\");\nfunction $String(string) {\n    return {\n        split: (separator, limit) => (0, split_1.split)(string)(separator, limit),\n        replaceAll: (separator, p) => (0, replace_all_1.replaceAll)(string)(separator, p),\n        hasQueryParams: () => (0, has_query_params_1.hasQueryParams)(string),\n        joinQueries: (queries) => (0, join_queries_1.joinQueries)(string)(queries),\n    };\n}\nexports.$String = $String;\n","import { hasQueryParams as _hasQueryParams } from './has-query-params'\nimport { joinQueries as _joinQueries } from './join-queries'\nimport { replaceAll as _replaceAll } from './replace-all'\nimport { split as _split } from './split'\n\nexport function $String<S extends string>(string: S) {\n    return {\n        split: <Separator extends string | RegExp>(\n            separator: Separator,\n            limit?: number | undefined\n        ) => _split(string)(separator, limit),\n        replaceAll: <Separator extends string, P extends object>(separator: Separator, p: P) =>\n            _replaceAll(string)(separator, p),\n        hasQueryParams: () => _hasQueryParams(string),\n        joinQueries: <Q extends string>(queries: Q) => _joinQueries(string)(queries),\n    }\n}\n"]}