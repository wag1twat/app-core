"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EventHandling=void 0;const Guards_1=require("../Guards");class EventHandling{static toScrollBottom=(r,t)=>{r.current&&Guards_1.Guards.isFunc(r.current.scrollTo)&&Guards_1.Guards.isNumber(r.current.scrollHeight)&&r.current.scrollTo({left:0,top:r.current.scrollHeight,behavior:"smooth",...t})};static onScrollBottom=(u,c)=>r=>{var t,e,s;c&&r.currentTarget&&(t=Guards_1.Guards.isNumber(r.currentTarget.scrollHeight),e=Guards_1.Guards.isNumber(r.currentTarget.scrollTop),s=Guards_1.Guards.isNumber(r.currentTarget.clientHeight),t)&&e&&s&&r.currentTarget.scrollHeight-r.currentTarget.scrollTop===r.currentTarget.clientHeight&&u(r)}}exports.EventHandling=EventHandling;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50SGFuZGxpbmcvRXZlbnRIYW5kbGluZy5qcyIsIi4uL3NyYy9FdmVudEhhbmRsaW5nL0V2ZW50SGFuZGxpbmcudHMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHdWFyZHNfMSIsInJlcXVpcmUiLCJFdmVudEhhbmRsaW5nIiwidG9TY3JvbGxCb3R0b20iLCJyZWYiLCJvcHRpb25zIiwiY3VycmVudCIsIkd1YXJkcyIsImlzRnVuYyIsInNjcm9sbFRvIiwiaXNOdW1iZXIiLCJzY3JvbGxIZWlnaHQiLCJsZWZ0IiwidG9wIiwiYmVoYXZpb3IiLCJvblNjcm9sbEJvdHRvbSIsImNhbGxiYWNrIiwiZW5hYmxlZCIsImV2ZW50IiwiaXNTY3JvbGxIZWlnaHQiLCJpc1Njcm9sbFRvcCIsImlzQ2xpZW50SGVpZ2h0IiwiY3VycmVudFRhcmdldCIsInNjcm9sbFRvcCIsImNsaWVudEhlaWdodCJdLCJtYXBwaW5ncyI6IkFBQUEsYUFDQUEsT0FBT0MsZUFBZUMsUUFBUyxhQUFjLENBQUVDLE1BQU8sQ0FBQSxDQUFLLENBQUMsRUFBNURILFFBQU9DLGNBQWVDLEtBQUFBLEVDRHRCLE1BQUFFLFNBQUFDLFFBQUEsV0FBQSxRQU9NQyxjQUNGQyxzQkFBd0JBLENBQ3BCQyxFQUNBQyxLQUVJRCxFQUFJRSxTQUVBTixTQUFBTyxPQUFPQyxPQUFPSixFQUFJRSxRQUFRRyxRQUFRLEdBQ2xDVCxTQUFBTyxPQUFPRyxTQUFTTixFQUFJRSxRQUFRSyxZQUFZLEdBRXhDUCxFQUFJRSxRQUFRRyxTQUFTLENBQ2pCRyxLQUFNLEVBQ05DLElBQUtULEVBQUlFLFFBQVFLLGFBQ2pCRyxTQUFVLFNBQ1YsR0FBR1QsQ0FESFMsQ0FFSCxDQUdiLEVBRUFDLHNCQUF3QkEsQ0FDcEJDLEVBQ0FDLElBRVFDLElBQ0osSUFFWUMsRUFHQUMsRUFHQUMsRUFSUkosR0FDSUMsRUFBTUksZ0JBQ0ZILEVBQWlCbkIsU0FBQU8sT0FBT0csU0FDeEJRLEVBQU1JLGNBQWNYLFlBQVksRUFFaENTLEVBQWNwQixTQUFBTyxPQUFPRyxTQUNyQlEsRUFBTUksY0FBY0MsU0FBUyxFQUU3QkYsRUFBaUJyQixTQUFBTyxPQUFPRyxTQUN4QlEsRUFBTUksY0FBY0UsWUFBWSxFQUVoQ0wsSUFBa0JDLEdBQWVDLEdBRTdCSCxFQUFNSSxjQUFjWCxhQUNoQk8sRUFBTUksY0FBY0MsWUFDeEJMLEVBQU1JLGNBQWNFLGNBR3BCUixFQUFTRSxDQUFLLENBS2xDLENEbEJSLENDc0JTcEIsUUFBQUksY0FBQUEiLCJmaWxlIjoiRXZlbnRIYW5kbGluZy9FdmVudEhhbmRsaW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkV2ZW50SGFuZGxpbmcgPSB2b2lkIDA7XG5jb25zdCBHdWFyZHNfMSA9IHJlcXVpcmUoXCIuLi9HdWFyZHNcIik7XG5jbGFzcyBFdmVudEhhbmRsaW5nIHtcbiAgICBzdGF0aWMgdG9TY3JvbGxCb3R0b20gPSAocmVmLCBvcHRpb25zKSA9PiB7XG4gICAgICAgIGlmIChyZWYuY3VycmVudCkge1xuICAgICAgICAgICAgaWYgKEd1YXJkc18xLkd1YXJkcy5pc0Z1bmMocmVmLmN1cnJlbnQuc2Nyb2xsVG8pICYmXG4gICAgICAgICAgICAgICAgR3VhcmRzXzEuR3VhcmRzLmlzTnVtYmVyKHJlZi5jdXJyZW50LnNjcm9sbEhlaWdodCkpIHtcbiAgICAgICAgICAgICAgICByZWYuY3VycmVudC5zY3JvbGxUbyh7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHRvcDogcmVmLmN1cnJlbnQuc2Nyb2xsSGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICBiZWhhdmlvcjogJ3Ntb290aCcsXG4gICAgICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHN0YXRpYyBvblNjcm9sbEJvdHRvbSA9IChjYWxsYmFjaywgZW5hYmxlZCkgPT4ge1xuICAgICAgICByZXR1cm4gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoZW5hYmxlZCkge1xuICAgICAgICAgICAgICAgIGlmIChldmVudC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpc1Njcm9sbEhlaWdodCA9IEd1YXJkc18xLkd1YXJkcy5pc051bWJlcihldmVudC5jdXJyZW50VGFyZ2V0LnNjcm9sbEhlaWdodCk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpc1Njcm9sbFRvcCA9IEd1YXJkc18xLkd1YXJkcy5pc051bWJlcihldmVudC5jdXJyZW50VGFyZ2V0LnNjcm9sbFRvcCk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpc0NsaWVudEhlaWdodCA9IEd1YXJkc18xLkd1YXJkcy5pc051bWJlcihldmVudC5jdXJyZW50VGFyZ2V0LmNsaWVudEhlaWdodCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1Njcm9sbEhlaWdodCAmJiBpc1Njcm9sbFRvcCAmJiBpc0NsaWVudEhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYm90dG9tID0gZXZlbnQuY3VycmVudFRhcmdldC5zY3JvbGxIZWlnaHQgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2Nyb2xsVG9wID09PVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuY2xpZW50SGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJvdHRvbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xufVxuZXhwb3J0cy5FdmVudEhhbmRsaW5nID0gRXZlbnRIYW5kbGluZztcbiIsImltcG9ydCB7IEd1YXJkcyB9IGZyb20gJy4uL0d1YXJkcydcbmltcG9ydCB7XG4gICAgTXV0YWJsZVJlZk9iamVjdCxcbiAgICBVSUV2ZW50IGFzIFJlYWN0VUlFdmVudCxcbiAgICBVSUV2ZW50SGFuZGxlcixcbn0gZnJvbSAncmVhY3QnXG5cbmNsYXNzIEV2ZW50SGFuZGxpbmcge1xuICAgIHN0YXRpYyB0b1Njcm9sbEJvdHRvbSA9IDxFIGV4dGVuZHMgRWxlbWVudD4oXG4gICAgICAgIHJlZjogTXV0YWJsZVJlZk9iamVjdDxFIHwgbnVsbD4sXG4gICAgICAgIG9wdGlvbnM/OiBTY3JvbGxUb09wdGlvbnNcbiAgICApID0+IHtcbiAgICAgICAgaWYgKHJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgR3VhcmRzLmlzRnVuYyhyZWYuY3VycmVudC5zY3JvbGxUbykgJiZcbiAgICAgICAgICAgICAgICBHdWFyZHMuaXNOdW1iZXIocmVmLmN1cnJlbnQuc2Nyb2xsSGVpZ2h0KVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmVmLmN1cnJlbnQuc2Nyb2xsVG8oe1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgICAgICAgICB0b3A6IHJlZi5jdXJyZW50LnNjcm9sbEhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxuICAgICAgICAgICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGF0aWMgb25TY3JvbGxCb3R0b20gPSA8RWwgZXh0ZW5kcyBFbGVtZW50PihcbiAgICAgICAgY2FsbGJhY2s6IChlOiBSZWFjdFVJRXZlbnQ8RWwsIFVJRXZlbnQ+KSA9PiB2b2lkLFxuICAgICAgICBlbmFibGVkOiBib29sZWFuXG4gICAgKTogVUlFdmVudEhhbmRsZXI8RWw+ID0+IHtcbiAgICAgICAgcmV0dXJuIChldmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKGVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQuY3VycmVudFRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgaXNTY3JvbGxIZWlnaHQgPSBHdWFyZHMuaXNOdW1iZXIoXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNjcm9sbEhlaWdodFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIGxldCBpc1Njcm9sbFRvcCA9IEd1YXJkcy5pc051bWJlcihcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuc2Nyb2xsVG9wXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgbGV0IGlzQ2xpZW50SGVpZ2h0ID0gR3VhcmRzLmlzTnVtYmVyKFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5jbGllbnRIZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNTY3JvbGxIZWlnaHQgJiYgaXNTY3JvbGxUb3AgJiYgaXNDbGllbnRIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJvdHRvbSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5zY3JvbGxIZWlnaHQgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LnNjcm9sbFRvcCA9PT1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LmNsaWVudEhlaWdodFxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYm90dG9tKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXZlbnQpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCB7IEV2ZW50SGFuZGxpbmcgfVxuIl19
