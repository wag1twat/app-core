{"version":3,"sources":["../lib/RequiredEnv/RequiredEnv.ts","RequiredEnv/RequiredEnv.js"],"names":["_runtypes","require","defaultOptions","checkOnInitializeClass","RequiredEnv","constructor","variables","options","this","_variables","_contract","createContract","check","RuntypesRecord","reduce","a","c","Object","assign","RuntypesString","getVariables","v","process","env","exports"],"mappings":"+FAAA,IAAAA,UAAAC,QAAA,UAAA,EAGA,MAAMC,eAAqC,CACvCC,uBAAwB,CAAA,CCD5B,QDIMC,YAIFC,YAAYC,EAAcC,EAA8BL,gBACpDM,KAAKC,WAAaH,EAElBE,KAAKE,UAAYF,KAAKG,eAAc,EAE5BR,EAA2BI,EAAL,uBAE3BJ,GACCK,KAAKI,MAAK,CAElB,CAEQD,iBACJ,OAAO,EAAAE,UAAAA,QAAeL,KAAKC,WAAWK,OAAmC,CAACC,EAAGC,IAAMC,OAAAC,OAAAD,OAAAC,OAAA,GAAMH,CAAC,EAAA,EAAGC,GAAIG,UAAAA,MAAc,CAAA,EAAK,EAAgC,CAAC,CACzJ,CAEOP,QACHJ,KAAKE,UAAUE,MAAMJ,KAAKY,aAAY,CAAE,CAC5C,CAEOA,eACH,OAAOZ,KAAKC,WAAWK,OAA2B,CAACC,EAAGM,IAAMJ,OAAAC,OAAAD,OAAAC,OAAA,GAAMH,CAAC,EAAA,EAAGM,GAAIC,QAAQC,IAAIF,EAAE,CAAA,EAAK,EAAwB,CACzH,CCXJ,CDYCG,QAAApB,YAAAA","file":"RequiredEnv.js","sourcesContent":["import { Record as RuntypesRecord, String as RuntypesString } from \"runtypes\"\r\nimport { MappedVariables, MappedVariablesContract, MappedVariablesRuntypes, RequiredEnvOptions } from \"./types\"\r\n\r\nconst defaultOptions: RequiredEnvOptions = {\r\n    checkOnInitializeClass: true\r\n}\r\n\r\nclass RequiredEnv<V extends readonly string[]> {\r\n    private _variables: V\r\n    private _contract: MappedVariablesContract<V>\r\n\r\n    constructor(variables: V, options: RequiredEnvOptions = defaultOptions) {\r\n        this._variables = variables\r\n\r\n        this._contract = this.createContract()\r\n\r\n        const { checkOnInitializeClass } = options\r\n\r\n        if(checkOnInitializeClass) {\r\n            this.check()\r\n        }\r\n    }\r\n\r\n    private createContract(){\r\n        return RuntypesRecord(this._variables.reduce<MappedVariablesRuntypes<V>>((a, c) => ({ ...a, [c]: RuntypesString }), {} as MappedVariablesRuntypes<V>))\r\n    }\r\n\r\n    public check(){\r\n        this._contract.check(this.getVariables())\r\n    }\r\n\r\n    public getVariables(): MappedVariables<V> {\r\n        return this._variables.reduce<MappedVariables<V>>((a, v) => ({ ...a, [v]: process.env[v] }), {} as MappedVariables<V>)\r\n    }\r\n}\r\n\r\nexport { RequiredEnv }","import { Record as RuntypesRecord, String as RuntypesString } from \"runtypes\";\nconst defaultOptions = {\n    checkOnInitializeClass: true\n};\nclass RequiredEnv {\n    constructor(variables, options = defaultOptions) {\n        this._variables = variables;\n        this._contract = this.createContract();\n        const { checkOnInitializeClass } = options;\n        if (checkOnInitializeClass) {\n            this.check();\n        }\n    }\n    createContract() {\n        return RuntypesRecord(this._variables.reduce((a, c) => (Object.assign(Object.assign({}, a), { [c]: RuntypesString })), {}));\n    }\n    check() {\n        this._contract.check(this.getVariables());\n    }\n    getVariables() {\n        return this._variables.reduce((a, v) => (Object.assign(Object.assign({}, a), { [v]: process.env[v] })), {});\n    }\n}\nexport { RequiredEnv };\n"]}