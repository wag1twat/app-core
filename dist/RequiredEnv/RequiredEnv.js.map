{"version":3,"sources":["RequiredEnv/RequiredEnv.js","../src/RequiredEnv/RequiredEnv.ts"],"names":["Object","defineProperty","exports","value","runtypes_1","require","defaultOptions","checkOnInitializeClass","RequiredEnv","_variables","_contract","constructor","variables","options","this","createContract","check","Record","reduce","a","c","String","getVariables","v","process","env"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,MAAO,CAAA,CAAK,CAAC,EAA5DH,QAAOC,YAAeC,KAAAA,ECDtB,MAAAE,WAAAC,QAAA,UAAA,EAQMC,eAAqC,CACvCC,uBAAwB,CAAA,CAT5B,QAYMC,YACMC,WACAC,UAERC,YAAYC,EAAcC,EAA8BP,gBACpDQ,KAAKL,WAAaG,EAElBE,KAAKJ,UAAYI,KAAKC,eAAc,EAE5BR,EAA2BM,EAAL,uBAE1BN,GACAO,KAAKE,MAAK,CAElB,CAEQD,iBACJ,OAAO,EAAAX,WAAAa,QACHH,KAAKL,WAAWS,OACZ,CAACC,EAAGC,KAAC,CAAQ,GAAGD,GAAIC,GAAIhB,WAAAiB,MAAgB,GACxC,EAAgC,CACnC,CAET,CAEOL,QACHF,KAAKJ,UAAUM,MAAMF,KAAKQ,aAAY,CAAE,CAC5C,CAEOA,eACH,OAAOR,KAAKL,WAAWS,OACnB,CAACC,EAAGI,KAAC,CAAQ,GAAGJ,GAAII,GAAIC,QAAQC,IAAIF,EAAI,GACxC,EAAwB,CAEhC,CDnBJ,CCsBSrB,QAAAM,YAAAA","file":"RequiredEnv.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequiredEnv = void 0;\nconst runtypes_1 = require(\"runtypes\");\nconst defaultOptions = {\n    checkOnInitializeClass: true,\n};\nclass RequiredEnv {\n    _variables;\n    _contract;\n    constructor(variables, options = defaultOptions) {\n        this._variables = variables;\n        this._contract = this.createContract();\n        const { checkOnInitializeClass } = options;\n        if (checkOnInitializeClass) {\n            this.check();\n        }\n    }\n    createContract() {\n        return (0, runtypes_1.Record)(this._variables.reduce((a, c) => ({ ...a, [c]: runtypes_1.String }), {}));\n    }\n    check() {\n        this._contract.check(this.getVariables());\n    }\n    getVariables() {\n        return this._variables.reduce((a, v) => ({ ...a, [v]: process.env[v] }), {});\n    }\n}\nexports.RequiredEnv = RequiredEnv;\n","import { Record as RuntypesRecord, String as RuntypesString } from 'runtypes'\nimport {\n    MappedVariables,\n    MappedVariablesContract,\n    MappedVariablesRuntypes,\n    RequiredEnvOptions,\n} from './types'\n\nconst defaultOptions: RequiredEnvOptions = {\n    checkOnInitializeClass: true,\n}\n\nclass RequiredEnv<V extends readonly string[]> {\n    private _variables: V\n    private _contract: MappedVariablesContract<V>\n\n    constructor(variables: V, options: RequiredEnvOptions = defaultOptions) {\n        this._variables = variables\n\n        this._contract = this.createContract()\n\n        const { checkOnInitializeClass } = options\n\n        if (checkOnInitializeClass) {\n            this.check()\n        }\n    }\n\n    private createContract() {\n        return RuntypesRecord(\n            this._variables.reduce<MappedVariablesRuntypes<V>>(\n                (a, c) => ({ ...a, [c]: RuntypesString }),\n                {} as MappedVariablesRuntypes<V>\n            )\n        )\n    }\n\n    public check() {\n        this._contract.check(this.getVariables())\n    }\n\n    public getVariables(): MappedVariables<V> {\n        return this._variables.reduce<MappedVariables<V>>(\n            (a, v) => ({ ...a, [v]: process.env[v] }),\n            {} as MappedVariables<V>\n        )\n    }\n}\n\nexport { RequiredEnv }\n"]}